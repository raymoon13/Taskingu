---
import Layout from "../layouts/Layout.astro";
import { createClient } from "../lib/supabase";

const supabase = createClient({
  request: Astro.request,
  cookies: Astro.cookies,
});

const {
  data: { user },
} = await supabase.auth.getUser();

if (!user) {
  console.log(user)
  return Astro.redirect("/signin"); // Add return here
}

// Filter tasks by user_id
const { data: tasks, error: tasksError } = await supabase
  .from("tasks")
  .select("*")
  .eq("user_id", user.id) // ‚Üê THIS IS THE FIX
  .order("created_at", { ascending: false })
  .limit(5);

if (tasksError) {
  console.error("Error fetching tasks:", tasksError);
}
---

<Layout title="Task Management Dashboard">
  <h1>{user.email}</h1>
  <button id="logout-button">logout</button>

  <h2>Add Task</h2>

  <!-- form for adding a Task -->
  <form id="task-form">
    <textarea name="rawInput" placeholder="Task Description" required
    ></textarea>

    <div>
      <input
        type="radio"
        id="category-task"
        name="category"
        value="TASK"
        checked
        required
      />
      <label for="category-task">Task</label>

      <input
        type="radio"
        id="category-meeting"
        name="category"
        value="MEETING"
        required
      />
      <label for="category-meeting">Meeting</label>
    </div>

    <input
      type="number"
      name="effortTime"
      placeholder="Effort Time (hours)"
      step="0.5"
      min="0"
    />

    <button type="submit" id="task-add-button">Add Task</button>
  </form>

  <!-- Showing All The Tasks -->
  <h2>Your Tasks</h2>
  <div id="task-list">
    {
      tasks && tasks.length > 0 ? (
        tasks.map((task) => (
          <div class="task-item">
            <h3>{task.title}</h3>
            {task.description && <p>{task.description}</p>}
            <p>Raw Input: {task.raw_input}</p>
            <p>Category: {task.category}</p>
            {task.effort_time && <p>Effort: {task.effort_time} hours</p>}
            <p>Created: {new Date(task.created_at).toLocaleDateString()}</p>
          </div>
        ))
      ) : (
        <p>No tasks yet. Create your first task!</p>
      )
    }
  </div>
</Layout>

<script>
  import { actions } from "astro:actions";

  const taskForm = document.getElementById("task-form") as HTMLFormElement;
  const taskAddButton = document.getElementById("task-add-button") as HTMLButtonElement;
  taskForm?.addEventListener("submit", async (event) => {
    event.preventDefault();
    const formData = new FormData(taskForm);
    taskAddButton.disabled = true; // Disable button to prevent multiple submissions
    const response = await actions.task.createTask(formData);

    if (response.error) {
      alert(`Error: ${response.error.message}`);
      taskAddButton.disabled = false; // Re-enable button on error
    } else {
      alert("Task added successfully!");
      window.location.reload();
    }
  });

  const logoutButton = document.getElementById("logout-button");
  logoutButton?.addEventListener("click", async () => {

    console.log("signing out")
    const response = await actions.auth.signOut();

    if (response.error) {
      alert(`Error: ${response.error.message}`);
    } else {
      alert("Logged out successfully!");
      window.location.reload();
    }
  });
</script>

<style>
  .task-item {
    border: 1px solid #ddd;
    padding: 1rem;
    margin-bottom: 1rem;
    border-radius: 4px;
  }

  .task-item h3 {
    margin-top: 0;
  }
</style>
